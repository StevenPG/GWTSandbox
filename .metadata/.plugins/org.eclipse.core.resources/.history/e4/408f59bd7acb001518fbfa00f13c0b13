Steven Gantz

How To Play:
	To play, enter a value at the prompt when shown.
	Here are the gameplay steps:
	1. Select a card from the numbered grid
	2. Select a second card to guess if it is identical.
	3. Read output, and use your memory to decide on your next card.
	4. Repeat 1-3 until the game is over.
	
	Note:
		Entering -2 will end the game prematurely.
		-- You may cheat because the game is too hard by entering -1.
			(Be careful, the game is unaware you are
			 cheating and might get confused. 
			 It will undoubtedly recover and work fine though.)

Design Decisions:
	I decided that I would 

List of Classes with short description:
	
	stevengantz\
		memory\
			card\
				CardFace.java - Interface that is used in MemoryCard.java to 
						allow for other types of card faces. 
						(ie. image/text/sound/etc.)
				MemoryCard.java - Contains an in memory representation of a 
						memory game playing card.
				TextCardFace.java - Implements CardFace with a text based 
						card face representation.
			cli\
				MemoryGameBoardWriter.java - Receives a game board to access 
						and write to the screen.
				Memory.java - Main of application, creates a game text driver 
						to run and play the game.
			docs\
				DocumentationHeader.txt - Lazy doc header to copy and paste 
						into each source file.
			spiegel\
				SpiegelCode.java - Class with static methods to abstract 
						out any outside code.
			structure\
				MemoryGameBoard.java - In-memory representation of the game 
						board being manipulated.
				MemoryGameState.java - Contains and updates the current 
						progress of the player.
				MemoryGameTextDriver.java - Generates the general game 
						execution and draws to the screen.
			test\
				MemoryCardTest.java - Short method testing class for 
						the MemoryCard object
				MemoryGameBoardTest.java - Short method testing class 
						for the MemoryGameBoard object

	